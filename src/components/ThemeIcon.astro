---

---

<div class="outher_container">
  <div class="day_night_container">
    <input type="checkbox" class="checkbox" id="chk" />
    <label class="label" for="chk">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="icon icon-tabler icon-tabler-brightness-2 w-3 h-3"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        stroke-width="2"
        stroke="#FCBF49"
        fill="none"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
        <path d="M12 12m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"></path>
        <path
          d="M6 6h3.5l2.5 -2.5l2.5 2.5h3.5v3.5l2.5 2.5l-2.5 2.5v3.5h-3.5l-2.5 2.5l-2.5 -2.5h-3.5v-3.5l-2.5 -2.5l2.5 -2.5z"
        ></path>
      </svg>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="icon icon-tabler icon-tabler-moon-filled w-3 h-3"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        stroke-width="2"
        stroke="currentColor"
        fill="none"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
        <path
          d="M12 1.992a10 10 0 1 0 9.236 13.838c.341 -.82 -.476 -1.644 -1.298 -1.31a6.5 6.5 0 0 1 -6.864 -10.787l.077 -.08c.551 -.63 .113 -1.653 -.758 -1.653h-.266l-.068 -.006l-.06 -.002z"
          stroke-width="0"
          fill="#FCBF49"></path>
      </svg>
      <div class="ball"></div>
    </label>
  </div>
</div>

<style>
  /*night/day mode*/

  .outher_container {
    display: flex;
  }
  .day_night_container {
    align-self: center;
    /* margin-bottom: 1.5rem; */
  }
  .day_night_container .checkbox {
    opacity: 0;
    position: absolute;
  }

  .day_night_container .label {
    background-color: rgb(121, 121, 115);
    border-radius: 50px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 5px;
    position: relative;
    height: 20px;
    width: 38px;
    transform: scale(1.5);
  }

  .day_night_container .label .ball {
    background-color: #eeffff;
    border-radius: 50%;
    position: absolute;
    top: 2px;
    left: 2px;
    height: 16px;
    width: 16px;
    transform: translateX(0px);
    transition: transform 0.2s linear;
  }
  .day_night_container .checkbox:checked + .label .ball {
    transform: translateX(18px);
  }
</style>

<script>
  document.addEventListener("astro:page-load", () => {
    const checkbox = document.getElementById("chk") as HTMLInputElement | null;

    const theme = (() => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme");
      }
      // if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      //   return "dark";
      // }
      return "dark";
    })();

    if (theme === "light") {
      checkbox ? (checkbox.checked = true) : null;
      document.documentElement.setAttribute("data-mode", "light");
    } else {
      checkbox ? (checkbox.checked = false) : null;
      document.documentElement.setAttribute("data-mode", "dark");
    }

    window.localStorage.setItem("theme", theme as string);
    // root.style.transition = "background-color 0.5s ease";

    const handleToggleClick = () => {
      const element = document.documentElement;
      element.getAttribute("data-mode") === "dark"
        ? element.setAttribute("data-mode", "light")
        : element.setAttribute("data-mode", "dark");

      const isDark = element.getAttribute("data-mode") === "dark";
      localStorage.setItem("theme", isDark ? "dark" : "light");
    };

    checkbox && checkbox.addEventListener("change", handleToggleClick);
  });
</script>

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    // if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
    //   return "dark";
    // }
    return "dark";
  })();

  if (theme === "light") {
    document.getElementById("chk").checked = true;
    document.documentElement.setAttribute("data-mode", "light");
  } else {
    document.getElementById("chk").checked = false;
    document.documentElement.setAttribute("data-mode", "dark");
  }

  window.localStorage.setItem("theme", theme);
</script>

<script>
  document.addEventListener("astro:after-swap", () => {
    const checkbox = document.getElementById("chk") as HTMLInputElement | null;

    if (localStorage.theme === "dark") {
      checkbox ? (checkbox.checked = false) : null;
    } else {
      checkbox ? (checkbox.checked = true) : null;
    }
    localStorage.theme === "dark"
      ? document.documentElement.setAttribute("data-mode", "dark")
      : document.documentElement.setAttribute("data-mode", "light");
  });
</script>
